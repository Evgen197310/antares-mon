#!/bin/bash

# –°–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –µ–¥–∏–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
# –í–µ—Ä—Å–∏—è: 2.0.0

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –µ–¥–∏–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1" >&2
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
check_environment() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
    if ! command -v python3 &> /dev/null; then
        error "Python3 –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        exit 1
    fi
    
    python_version=$(python3 --version | cut -d' ' -f2)
    log "Python –≤–µ—Ä—Å–∏—è: $python_version"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ MySQL
    if ! command -v mysql &> /dev/null; then
        warning "MySQL –∫–ª–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ MySQL —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω."
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    if [[ ! -f "/etc/infra/config.json" ]]; then
        error "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª /etc/infra/config.json –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        exit 1
    fi
    
    success "–û–∫—Ä—É–∂–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
install_dependencies() {
    log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    if [[ ! -f "requirements.txt" ]]; then
        error "–§–∞–π–ª requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        exit 1
    fi
    
    pip3 install -r requirements.txt
    success "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
create_directories() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
    
    sudo mkdir -p /var/log/monitoring-web
    sudo chown $(whoami):$(whoami) /var/log/monitoring-web
    
    success "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã"
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
test_structure() {
    log "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    required_files=(
        "app/__init__.py"
        "app/config.py"
        "app/blueprints/main.py"
        "app/blueprints/vpn.py"
        "app/blueprints/rdp.py"
        "app/blueprints/smb.py"
        "app/blueprints/api.py"
        "app/models/database.py"
        "app/utils/filters.py"
        "app/templates/base.html"
        "run.py"
    )
    
    for file in "${required_files[@]}"; do
        if [[ ! -f "$file" ]]; then
            error "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª: $file"
            exit 1
        fi
    done
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ Python
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ Python —Ñ–∞–π–ª–æ–≤..."
    find app/ -name "*.py" -exec python3 -m py_compile {} \;
    python3 -m py_compile run.py
    
    success "–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞"
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –∫ –±–∞–∑–∞–º –¥–∞–Ω–Ω—ã—Ö
test_databases() {
    log "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –∫ –±–∞–∑–∞–º –¥–∞–Ω–Ω—ã—Ö..."
    
    python3 -c "
import sys
sys.path.append('.')
from app.models.database import db_manager
from app.config import Config

config = Config()
print('–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –∫ –ë–î...')

for db_type in ['vpn', 'rdp', 'smb']:
    try:
        with db_manager.get_connection(db_type) as conn:
            with conn.cursor() as cursor:
                cursor.execute('SELECT 1')
                result = cursor.fetchone()
                print(f'‚úÖ {db_type.upper()} –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: OK')
    except Exception as e:
        print(f'‚ùå {db_type.upper()} –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {e}')
        sys.exit(1)

print('–í—Å–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω—ã!')
"
    
    if [[ $? -eq 0 ]]; then
        success "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–∞–º –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞—é—Ç"
    else
        error "–ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ –±–∞–∑–∞–º –¥–∞–Ω–Ω—ã—Ö"
        exit 1
    fi
}

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
test_application() {
    log "–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ..."
    
    # –ó–∞–ø—É—Å–∫ –Ω–∞ –∫–æ—Ä–æ—Ç–∫–æ–µ –≤—Ä–µ–º—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    timeout 10s python3 run.py &
    app_pid=$!
    
    sleep 5
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—Å—Ç–∏–ª–æ—Å—å
    if kill -0 $app_pid 2>/dev/null; then
        log "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—Å—Ç–∏–ª–æ—Å—å (PID: $app_pid)"
        
        # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö endpoints
        log "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö endpoints..."
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        if curl -s -f http://localhost:5050/ > /dev/null; then
            success "–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–æ—Å—Ç—É–ø–Ω–∞"
        else
            warning "–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
        fi
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ API health
        if curl -s -f http://localhost:5050/api/health > /dev/null; then
            success "API health endpoint –¥–æ—Å—Ç—É–ø–µ–Ω"
        else
            warning "API health endpoint –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        fi
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ health
        if curl -s -f http://localhost:5050/health > /dev/null; then
            success "–û—Å–Ω–æ–≤–Ω–æ–π health endpoint –¥–æ—Å—Ç—É–ø–µ–Ω"
        else
            warning "–û—Å–Ω–æ–≤–Ω–æ–π health endpoint –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        fi
        
        # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
        kill $app_pid 2>/dev/null || true
        wait $app_pid 2>/dev/null || true
        
        success "–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ"
    else
        error "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª–æ—Å—å"
        exit 1
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞
create_systemd_service() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞..."
    
    cat > /tmp/monitoring-web.service << EOF
[Unit]
Description=Network Monitoring Web Application
After=network.target mysql.service

[Service]
Type=exec
User=$(whoami)
Group=$(whoami)
WorkingDirectory=/opt/monitoring-web
Environment=FLASK_ENV=production
Environment=FLASK_PORT=5050
Environment=FLASK_HOST=0.0.0.0
Environment=PYTHONPATH=/opt/monitoring-web
ExecStart=/usr/bin/python3 run.py
Restart=always
RestartSec=10
StandardOutput=journal
StandardError=journal

[Install]
WantedBy=multi-user.target
EOF
    
    sudo mv /tmp/monitoring-web.service /etc/systemd/system/
    sudo systemctl daemon-reload
    
    success "Systemd —Å–µ—Ä–≤–∏—Å —Å–æ–∑–¥–∞–Ω"
}

# –§–∏–Ω–∞–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫
start_application() {
    log "–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ –ø—Ä–æ–¥–∞–∫—à–Ω —Ä–µ–∂–∏–º–µ..."
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    sudo systemctl stop monitoring-web 2>/dev/null || true
    
    # –ó–∞–ø—É—Å–∫ –Ω–æ–≤–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞
    sudo systemctl enable monitoring-web
    sudo systemctl start monitoring-web
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
    sleep 3
    if sudo systemctl is-active --quiet monitoring-web; then
        success "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –∫–∞–∫ systemd —Å–µ—Ä–≤–∏—Å"
        
        # –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å
        sudo systemctl status monitoring-web --no-pager -l
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
        sleep 5
        if curl -s -f http://localhost:5050/api/health > /dev/null; then
            success "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:5050"
        else
            warning "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ, –Ω–æ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã"
        fi
    else
        error "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∫–∞–∫ —Å–µ—Ä–≤–∏—Å"
        sudo journalctl -u monitoring-web --no-pager -l
        exit 1
    fi
}

# –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–∏
show_deployment_info() {
    log "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–∏:"
    echo
    echo "üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:"
    echo "   –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞:    http://localhost:5050/"
    echo "   VPN –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:      http://localhost:5050/vpn/"
    echo "   RDP –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:      http://localhost:5050/rdp/"
    echo "   SMB –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:      http://localhost:5050/smb/"
    echo
    echo "üì° REST API:"
    echo "   API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:    http://localhost:5050/api/"
    echo "   –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã (UI): http://localhost:5050/health"
    echo "   –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã (API): http://localhost:5050/api/health"
    echo "   –û–±—â–∏–π —Å—Ç–∞—Ç—É—Å:        http://localhost:5050/api/status"
    echo
    echo "üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–º:"
    echo "   –°—Ç–∞—Ç—É—Å:              sudo systemctl status monitoring-web"
    echo "   –û—Å—Ç–∞–Ω–æ–≤–∫–∞:           sudo systemctl stop monitoring-web"
    echo "   –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫:          sudo systemctl restart monitoring-web"
    echo "   –õ–æ–≥–∏:                sudo journalctl -u monitoring-web -f"
    echo
    echo "üìÅ –§–∞–π–ª—ã:"
    echo "   –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:        /etc/infra/config.json"
    echo "   –õ–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:     /var/log/monitoring-web/app.log"
    echo "   Systemd —Å–µ—Ä–≤–∏—Å:      /etc/systemd/system/monitoring-web.service"
    echo
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
    echo "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –µ–¥–∏–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ v2.0.0"
    echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
    echo
    
    check_environment
    echo
    
    install_dependencies
    echo
    
    create_directories
    echo
    
    test_structure
    echo
    
    test_databases
    echo
    
    test_application
    echo
    
    create_systemd_service
    echo
    
    start_application
    echo
    
    show_deployment_info
    
    echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
    success "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
    echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
case "${1:-}" in
    "test")
        log "–ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è..."
        check_environment
        test_structure
        test_databases
        test_application
        ;;
    "install")
        log "–ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
        install_dependencies
        create_directories
        ;;
    "start")
        log "–ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
        start_application
        ;;
    *)
        main
        ;;
esac
